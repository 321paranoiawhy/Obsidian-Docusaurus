"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1470],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>y});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},l=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),u=p(r),g=a,y=u["".concat(s,".").concat(g)]||u[g]||m[g]||i;return r?n.createElement(y,c(c({ref:t},l),{},{components:r})):n.createElement(y,c({ref:t},l))}));function y(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,c=new Array(i);c[0]=g;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:a,c[1]=o;for(var p=2;p<i;p++)c[p]=r[p];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}g.displayName="MDXCreateElement"},2920:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const i={title:"Best Practices","date created":"Saturday, February 25th 2023, 1:21:38 pm","date modified":"Sunday, February 26th 2023, 10:41:47 am"},c="Best Practices",o={unversionedId:"Programming langs/TypeScript/Best practices",id:"Programming langs/TypeScript/Best practices",title:"Best Practices",description:"Harden Type-checking with Configurations",source:"@site/docs/Programming langs/TypeScript/Best practices.md",sourceDirName:"Programming langs/TypeScript",slug:"/Programming langs/TypeScript/Best practices",permalink:"/Obsidian-Docusaurus/docs/Programming langs/TypeScript/Best practices",draft:!1,editUrl:"https://github.com/zekaryas1/notes/blob/main/docs/Programming langs/TypeScript/Best practices.md",tags:[],version:"current",frontMatter:{title:"Best Practices","date created":"Saturday, February 25th 2023, 1:21:38 pm","date modified":"Sunday, February 26th 2023, 10:41:47 am"},sidebar:"tutorialSidebar",previous:{title:"PHP Crash Note",permalink:"/Obsidian-Docusaurus/docs/Programming langs/PHP"},next:{title:"Fundamentals",permalink:"/Obsidian-Docusaurus/docs/Programming langs/TypeScript/Fundamentals"}},s={},p=[{value:"Harden Type-checking with Configurations",id:"harden-type-checking-with-configurations",level:2}],l={toc:p},u="wrapper";function m(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"best-practices"},"Best Practices"),(0,a.kt)("h2",{id:"harden-type-checking-with-configurations"},"Harden Type-checking with Configurations"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"using typescript configuration we can make type-checking strict, making it easy to stop bugs.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'//tsconfig.json\n{\n    "compilerOptions": {\n        "noImplicitAny": true\n    }\n}\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Turn on ",(0,a.kt)("em",{parentName:"li"},"noImplicitAny")," unless you are transitioning a JavaScript project to Typescript."),(0,a.kt)("li",{parentName:"ul"},"Use ",(0,a.kt)("em",{parentName:"li"},"strictNullChecks")," to prevent \u201cundefined is not an object\u201d- style runtime errors."),(0,a.kt)("li",{parentName:"ul"},"Aim to enable ",(0,a.kt)("em",{parentName:"li"},"strict")," to get the most thorough checking that Typescript can offer.")))}m.isMDXComponent=!0}}]);