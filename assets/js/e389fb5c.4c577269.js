"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9727],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>g});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=p(r),m=a,g=c["".concat(l,".").concat(m)]||c[m]||d[m]||i;return r?n.createElement(g,o(o({ref:t},u),{},{components:r})):n.createElement(g,o({ref:t},u))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},673:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const i={title:"500. Server Side Rendering","date created":"Thursday, November 10th 2022, 7:11:17 pm","date modified":"Monday, November 14th 2022, 4:38:51 pm"},o="500. Server Side Rendering",s={unversionedId:"Frameworks/Nextjs/Server side rendering",id:"Frameworks/Nextjs/Server side rendering",title:"500. Server Side Rendering",description:"Revision on SSG",source:"@site/docs/Frameworks/Nextjs/500. Server side rendering.md",sourceDirName:"Frameworks/Nextjs",slug:"/Frameworks/Nextjs/Server side rendering",permalink:"/Obsidian-Docusaurus/docs/Frameworks/Nextjs/Server side rendering",draft:!1,editUrl:"https://github.com/321paranoiawhy/321paranoiawhy.github.io/blob/main/docs/Frameworks/Nextjs/500. Server side rendering.md",tags:[],version:"current",sidebarPosition:500,frontMatter:{title:"500. Server Side Rendering","date created":"Thursday, November 10th 2022, 7:11:17 pm","date modified":"Monday, November 14th 2022, 4:38:51 pm"},sidebar:"tutorialSidebar",previous:{title:"400. Pre-rendering",permalink:"/Obsidian-Docusaurus/docs/Frameworks/Nextjs/Static site generation"},next:{title:"600. Client Side Data Fetching",permalink:"/Obsidian-Docusaurus/docs/Frameworks/Nextjs/Client side data fetching"}},l={},p=[{value:"Revision on SSG",id:"revision-on-ssg",level:2},{value:"SSR",id:"ssr",level:2},{value:"getServeSideProps",id:"getservesideprops",level:3},{value:"SSR with Dynamic Parameters",id:"ssr-with-dynamic-parameters",level:3},{value:"getServerSideProps Context",id:"getserversideprops-context",level:3}],u={toc:p},c="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"500-server-side-rendering"},"500. Server Side Rendering"),(0,a.kt)("h2",{id:"revision-on-ssg"},"Revision on SSG"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"With static site generation",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"HTML is statically generated at build time, the built page is then cached and reused for each request.",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"For a dynamic page with ",(0,a.kt)("inlineCode",{parentName:"li"},"getStaticPaths")," and fallback set to true the page is not generated at build time but is generated on the initial request."),(0,a.kt)("li",{parentName:"ul"},"With incremental static re-generation, a page an be re-generated for a request after the re-validation time has elapsed."))),(0,a.kt)("li",{parentName:"ul"},"Problem with static site generation",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"We cannot fetch data at request time",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"With not being able to fetch data per request (always), we run into the problem of stale data"))),(0,a.kt)("li",{parentName:"ul"},"We don't get access to the incoming request",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Problem when the data that needs to be fetched is specific to a user"),(0,a.kt)("li",{parentName:"ul"},"ex: YouTube home page, every-time you reload it will display a unique personalized pages")))))))),(0,a.kt)("h2",{id:"ssr"},"SSR"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Nextjs allows you to pre-render a page not at build time but at request time",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"The HTML is generated on each request."))),(0,a.kt)("li",{parentName:"ul"},"slower and not-recommended by next.js",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"only use when it is absolutely necessary"))),(0,a.kt)("li",{parentName:"ul"},"no HTML is generated when building the app, only ",(0,a.kt)("inlineCode",{parentName:"li"},"js"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"HTML is generated on each request")))),(0,a.kt)("h3",{id:"getservesideprops"},"getServeSideProps"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"runs only on the server side",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"not included in ",(0,a.kt)("inlineCode",{parentName:"li"},"js")," that is shipped to browser"))),(0,a.kt)("li",{parentName:"ul"},"you can run server side codes here"),(0,a.kt)("li",{parentName:"ul"},"only allowed to be used inside pages, not components"),(0,a.kt)("li",{parentName:"ul"},"should return an object containing a props key which is an object"),(0,a.kt)("li",{parentName:"ul"},"run at request time")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'function Products({products}) {\n    const productUI = (product) => {\n        return (<>\n            <h2>{product.title}</h2>\n            <p>{product.description}</p>\n        </>)\n    }\n\n    return (<>\n        <h2>Your list of products are</h2>\n        {\n            products.map(productUI)\n        }\n    </>)\n}\n\nexport default Products;\n\nexport async function getServerSideProps() {\n    const response = await fetch("https://dummyjson.com/products");\n    const data = await response.json();\n\n    return {\n        props: {\n            products: data.products\n        }\n    }\n}\n')),(0,a.kt)("h3",{id:"ssr-with-dynamic-parameters"},"SSR with Dynamic Parameters"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"function ProductByCategory({category, products}) {\n    return (<>\n        <h2> showing products for {category} </h2>\n        {\n            products.map(product => {\n                return <div>\n                    <h3>{product.title}</h3>\n                    <p>{product.category}</p>\n                    <p>{product.id}</p>\n                    <hr/>\n                </div>\n            })\n        }\n    </>)\n}\n\nexport default ProductByCategory;\n\n\nexport async function getServerSideProps(context) {\n    const {params} = context;\n    const {category} = params;\n    const response = await fetch(`https://dummyjson.com/products/category/${category}`);\n    const data = await response.json();\n\n    return {\n        props: {\n            products: data.products,\n            category: params.category,\n        }\n    }\n}\n")),(0,a.kt)("h3",{id:"getserversideprops-context"},"getServerSideProps Context"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"export async function getServerSideProps(context) {\n    const {params, req, res, query} = context;\n\n    //can change cookie\n    res.setHeader(\"Set-Cookie\", ['name=Zekaryas'])\n    \n    //get all query {query: mapping}\n    console.log(query);\n\n    //get all params\n    console.log(params)\n}\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://nextjs.org/docs/api-reference/data-fetching/get-server-side-props"},"get-server-side-props")),(0,a.kt)("li",{parentName:"ul"},"The context parameter is an object containing the following keys:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"params",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"if this page uses a dynamic route, params contains the route parameters. If the page name is ","[id]",".js , then params will look like { id:\u2026}."))),(0,a.kt)("li",{parentName:"ul"},"req",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"The HTTP IncomingMessage object, with an additional cookies prop, which is an object with string keys mapping to string values of cookies."))),(0,a.kt)("li",{parentName:"ul"},"res",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"The HTTP response object."))),(0,a.kt)("li",{parentName:"ul"},"query",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"An object representing the query string, including dynamic route parameters."))),(0,a.kt)("li",{parentName:"ul"},"\u2026")))))}d.isMDXComponent=!0}}]);