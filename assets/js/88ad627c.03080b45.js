"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4207],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),d=o,m=u["".concat(s,".").concat(d)]||u[d]||y[d]||i;return n?r.createElement(m,a(a({ref:t},p),{},{components:n})):r.createElement(m,a({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3737:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>y,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const i={"date created":"Thursday, June 16th 2022, 1:47:45 pm","date modified":"Sunday, July 3rd 2022, 11:38:27 am",title:"Sorting in Python"},a="Sorting in Python",l={unversionedId:"Algo/Python Tips & Tricks/Sorting",id:"Algo/Python Tips & Tricks/Sorting",title:"Sorting in Python",description:"- Two type of sort",source:"@site/docs/Algo/Python Tips & Tricks/Sorting.md",sourceDirName:"Algo/Python Tips & Tricks",slug:"/Algo/Python Tips & Tricks/Sorting",permalink:"/obsidian/docs/Algo/Python Tips & Tricks/Sorting",draft:!1,editUrl:"https://github.com/zekaryas1/notes/blob/main/docs/Algo/Python Tips & Tricks/Sorting.md",tags:[],version:"current",frontMatter:{"date created":"Thursday, June 16th 2022, 1:47:45 pm","date modified":"Sunday, July 3rd 2022, 11:38:27 am",title:"Sorting in Python"},sidebar:"tutorialSidebar",previous:{title:"Sets - Intersection, Union and More",permalink:"/obsidian/docs/Algo/Python Tips & Tricks/Sets - intersection, union and more"},next:{title:"String Operations",permalink:"/obsidian/docs/Algo/Python Tips & Tricks/String"}},s={},c=[{value:"Sort by Key",id:"sort-by-key",level:2}],p={toc:c},u="wrapper";function y(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"sorting-in-python"},"Sorting in Python"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Two type of sort",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Sorting in place"),(0,o.kt)("li",{parentName:"ul"},"Sorting out of place")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"a = [5,4,3,2,1]\nb = sorted(a) #return a new list not in place\na.sort() # sort in place\nprint(b)\nprint(a)\n")),(0,o.kt)("h2",{id:"sort-by-key"},"Sort by Key"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"When you have a 2D or > 1D list D = Dimension")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"a = [[5,4], [4,3], [3,2], [2,1]]\na.sort(key = lambda x: x[1]) #sort by the second key\nprint(a)\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"To get the sorted output in reverse {decreasing}")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"a.sort(key=lambda x: x[1], reverse=True)\n")))}y.isMDXComponent=!0}}]);