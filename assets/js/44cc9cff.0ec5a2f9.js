"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3153],{3905:(e,r,n)=>{n.d(r,{Zo:()=>s,kt:()=>h});var t=n(7294);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function l(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=t.createContext({}),d=function(e){var r=t.useContext(u),n=r;return e&&(n="function"==typeof e?e(r):o(o({},r),e)),n},s=function(e){var r=d(e.components);return t.createElement(u.Provider,{value:r},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},y=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=d(n),y=a,h=m["".concat(u,".").concat(y)]||m[y]||c[y]||i;return n?t.createElement(h,o(o({ref:r},s),{},{components:n})):t.createElement(h,o({ref:r},s))}));function h(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=y;var l={};for(var u in r)hasOwnProperty.call(r,u)&&(l[u]=r[u]);l.originalType=e,l[m]="string"==typeof e?e:a,o[1]=l;for(var d=2;d<i;d++)o[d]=n[d];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}y.displayName="MDXCreateElement"},6510:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var t=n(7462),a=(n(7294),n(3905));const i={"date created":"Thursday, June 16th 2022, 1:47:45 pm","date modified":"Sunday, July 24th 2022, 8:41:37 pm",title:"Boundary Binary Search"},o="Boundary Binary Search",l={unversionedId:"Algo/Fundamental Algorithms/Searching algos/Binary search-Find boundary",id:"Algo/Fundamental Algorithms/Searching algos/Binary search-Find boundary",title:"Boundary Binary Search",description:"- Source Algo Monster",source:"@site/docs/Algo/Fundamental Algorithms/Searching algos/2. Binary search-Find boundary.md",sourceDirName:"Algo/Fundamental Algorithms/Searching algos",slug:"/Algo/Fundamental Algorithms/Searching algos/Binary search-Find boundary",permalink:"/Obsidian-Docusaurus/docs/Algo/Fundamental Algorithms/Searching algos/Binary search-Find boundary",draft:!1,editUrl:"https://github.com/zekaryas1/notes/blob/main/docs/Algo/Fundamental Algorithms/Searching algos/2. Binary search-Find boundary.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{"date created":"Thursday, June 16th 2022, 1:47:45 pm","date modified":"Sunday, July 24th 2022, 8:41:37 pm",title:"Boundary Binary Search"},sidebar:"tutorialSidebar",previous:{title:"Binary Search",permalink:"/Obsidian-Docusaurus/docs/Algo/Fundamental Algorithms/Searching algos/Binary search"},next:{title:"Selection Sort",permalink:"/Obsidian-Docusaurus/docs/Algo/Fundamental Algorithms/Sorting algos/Selection Sort"}},u={},d=[{value:"How to Use Binary Boundary Method",id:"how-to-use-binary-boundary-method",level:2},{value:"Finding the Boundary with Binary Search",id:"finding-the-boundary-with-binary-search",level:2},{value:"Find Minimum in Rotated Sorted Array",id:"find-minimum-in-rotated-sorted-array",level:2}],s={toc:d},m="wrapper";function c(e){let{components:r,...n}=e;return(0,a.kt)(m,(0,t.Z)({},s,n,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"boundary-binary-search"},"Boundary Binary Search"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://algo.monster/problems/binary_search_boundary"},"Source Algo Monster"))),(0,a.kt)("h2",{id:"how-to-use-binary-boundary-method"},"How to Use Binary Boundary Method"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Most binary search questions can be solved with find boundary logic",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Steps:",(0,a.kt)("ol",{parentName:"li"},(0,a.kt)("li",{parentName:"ol"},"Find a logic to turn the sorted inputs in to a false\u2026True array"),(0,a.kt)("li",{parentName:"ol"},"With that logic modify the previous code"))),(0,a.kt)("li",{parentName:"ul"},"Example: Solving minimum in rotated sorted array",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"The logic to turn the sorted array: is arr","[i]"," <= arr","[-1]")))))),(0,a.kt)("h2",{id:"finding-the-boundary-with-binary-search"},"Finding the Boundary with Binary Search"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"An array of boolean values is divided into two sections;",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"The left section consists of all false and"),(0,a.kt)("li",{parentName:"ul"},"The right section consists of all true.")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Find the boundary of the right section",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"I.e. the index of the first true element. If there is no true element, return -1*."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://algo.monster/problems/binary_search_boundary"},"Finding Boundary - Binary Search / Overview"),"_")))))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"from typing import List\n\ndef find_boundary(arr: List[bool]) -> int:\n    left, right = 0, len(arr) - 1\n    boundary_index = -1\n\n    while left <= right:\n        mid = (left + right) // 2\n        if arr[mid]:\n            boundary_index = mid\n            right = mid - 1\n        else:\n            left = mid + 1\n\n    return boundary_index\n\nif __name__ == '__main__':\n    arr = [False, False, True, True, True]\n    res = find_boundary(arr)\n    print(res)\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"find-minimum-in-rotated-sorted-array"},"Find Minimum in Rotated Sorted Array"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"from typing import List\n\ndef find_min_rotated(arr: List[int]) -> int:\n    left, right = 0, len(arr) - 1\n    boundary_index = -1\n\n    while left <= right:\n        mid = (left + right) // 2\n        # if <= last element, then belongs to lower half\n        if arr[mid] <= arr[-1]:\n            boundary_index = mid\n            right = mid - 1\n        else:\n            left = mid + 1\n\n    return boundary_index\n\nif __name__ == '__main__':\n    arr = [int(x) for x in input().split()]\n    res = find_min_rotated(arr)\n    print(res)\n")))}c.isMDXComponent=!0}}]);