"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8993],{3905:(e,n,t)=>{t.d(n,{Zo:()=>g,kt:()=>m});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},g=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,g=s(e,["components","mdxType","originalType","parentName"]),u=c(t),p=i,m=u["".concat(l,".").concat(p)]||u[p]||d[p]||o;return t?r.createElement(m,a(a({ref:n},g),{},{components:t})):r.createElement(m,a({ref:n},g))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=p;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[u]="string"==typeof e?e:i,a[1]=s;for(var c=2;c<o;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},691:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=t(7462),i=(t(7294),t(3905));const o={tags:["string","sliding_window"],"date created":"Thursday, June 16th 2022, 1:47:45 pm","date modified":"Wednesday, August 10th 2022, 11:16:36 am",title:"5 Longest Palindromic Sub-string"},a="5 Longest Palindromic Sub-string",s={unversionedId:"Algo/Coding Practice/String/5 Longest Palindromic Substring.py",id:"Algo/Coding Practice/String/5 Longest Palindromic Substring.py",title:"5 Longest Palindromic Sub-string",description:"",source:"@site/docs/Algo/Coding Practice/String/5 Longest Palindromic Substring.py.md",sourceDirName:"Algo/Coding Practice/String",slug:"/Algo/Coding Practice/String/5 Longest Palindromic Substring.py",permalink:"/Obsidian-Docusaurus/docs/Algo/Coding Practice/String/5 Longest Palindromic Substring.py",draft:!1,editUrl:"https://github.com/zekaryas1/notes/blob/main/docs/Algo/Coding Practice/String/5 Longest Palindromic Substring.py.md",tags:[{label:"string",permalink:"/Obsidian-Docusaurus/docs/tags/string"},{label:"sliding_window",permalink:"/Obsidian-Docusaurus/docs/tags/sliding-window"}],version:"current",frontMatter:{tags:["string","sliding_window"],"date created":"Thursday, June 16th 2022, 1:47:45 pm","date modified":"Wednesday, August 10th 2022, 11:16:36 am",title:"5 Longest Palindromic Sub-string"},sidebar:"tutorialSidebar",previous:{title:"49 Group Anagrams",permalink:"/Obsidian-Docusaurus/docs/Algo/Coding Practice/String/49 Group Anagrams"},next:{title:"101 Symmetric Tree.py",permalink:"/Obsidian-Docusaurus/docs/Algo/Coding Practice/Tree/101 Symmetric Tree.py"}},l={},c=[],g={toc:c},u="wrapper";function d(e){let{components:n,...t}=e;return(0,i.kt)(u,(0,r.Z)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"5-longest-palindromic-sub-string"},"5 Longest Palindromic Sub-string"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'class Solution:\n    def longestPalindrome(self, s: str) -> str:\n        self.resString = ""\n        self.maxLength = 0\n        self.s = s\n        \n        \n        def runCheckPalindrom(left, right):\n            while left >=0 and right < len(self.s) and s[left] == s[right]:\n                if (right-left + 1) > self.maxLength:\n                    self.resString = s[left:right+1]\n                    self.maxLength = right-left+1\n                left -= 1\n                right += 1\n            \n        for i in range(len(s)):\n            runCheckPalindrom(i,i) #for odd\n            runCheckPalindrom(i,i+1) #for even\n        \n        return self.resString\n')))}d.isMDXComponent=!0}}]);