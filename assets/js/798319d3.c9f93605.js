"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1786],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=i.createContext({}),d=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=d(e.components);return i.createElement(s.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},h=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=d(n),h=r,m=c["".concat(s,".").concat(h)]||c[h]||p[h]||a;return n?i.createElement(m,l(l({ref:t},u),{},{components:n})):i.createElement(m,l({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=h;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:r,l[1]=o;for(var d=2;d<a;d++)l[d]=n[d];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}h.displayName="MDXCreateElement"},8882:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var i=n(7462),r=(n(7294),n(3905));const a={"date created":"Thursday, June 16th 2022, 1:47:45 pm","date modified":"Sunday, July 3rd 2022, 11:31:01 am",title:"What is Linked List"},l="What is Linked List",o={unversionedId:"Algo/Fundamental Algorithms/Linked List/Linked list",id:"Algo/Fundamental Algorithms/Linked List/Linked list",title:"What is Linked List",description:"* A linked list is a data structure that represents a sequence of nodes.",source:"@site/docs/Algo/Fundamental Algorithms/Linked List/Linked list.md",sourceDirName:"Algo/Fundamental Algorithms/Linked List",slug:"/Algo/Fundamental Algorithms/Linked List/",permalink:"/obsidian/docs/Algo/Fundamental Algorithms/Linked List/",draft:!1,editUrl:"https://github.com/zekaryas1/notes/blob/main/docs/Algo/Fundamental Algorithms/Linked List/Linked list.md",tags:[],version:"current",frontMatter:{"date created":"Thursday, June 16th 2022, 1:47:45 pm","date modified":"Sunday, July 3rd 2022, 11:31:01 am",title:"What is Linked List"},sidebar:"tutorialSidebar",previous:{title:"Greedy Algorithms",permalink:"/obsidian/docs/Algo/Fundamental Algorithms/Greedy algorithms"},next:{title:"Stack and Queue",permalink:"/obsidian/docs/Algo/Fundamental Algorithms/Linked List/Stack & Queue"}},s={},d=[{value:"The Runner Technique",id:"the-runner-technique",level:2},{value:"Tips on Linked List",id:"tips-on-linked-list",level:2}],u={toc:d},c="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,i.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"what-is-linked-list"},"What is Linked List"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A linked list is a data structure that represents a sequence of nodes.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"In a singly linked list. each node points to the next node in the linked list.\n",(0,r.kt)("img",{parentName:"li",src:"https://media.geeksforgeeks.org/wp-content/cdn-uploads/20200922124319/Singly-Linked-List1.png",alt:null})),(0,r.kt)("li",{parentName:"ul"},"A doubly linked list gives each node pointers to both the next node and the previous node.")))),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://media.geeksforgeeks.org/wp-content/cdn-uploads/20200922124412/Doubly-Linked-List.png",alt:null})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'Unlike an array, a linked list does not provide constant time access to a particular "index" within the list.',(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"This means that if you'd like to find the Kth element in the list, you will need to iterate through K elements."))),(0,r.kt)("li",{parentName:"ul"},"The benefit of a linked list is that you can add and remove items from the beginning of the list in constant time. For specific applications, this can be useful.")),(0,r.kt)("h2",{id:"the-runner-technique"},"The Runner Technique"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'The "runner" (or second pointer) technique is used in many linked list problems.'),(0,r.kt)("li",{parentName:"ul"},"The runner technique means that you iterate through the linked list with two pointers simultaneously, with one ahead of the other."),(0,r.kt)("li",{parentName:"ul"},'The "fast" node might be ahead by a fixed amount, or it might be hopping multiple nodes for each one node that the "slow" node iterates through.')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"#example finding a middle node in linked-list\ndef middleNode(head):\n    slow  = head\n    fast = head\n    while fast!=None and fast.next != None:\n        slow = slow.next\n        fast = fast.next.next\n    return slow\n")),(0,r.kt)("h2",{id:"tips-on-linked-list"},"Tips on Linked List"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"In python and other object is pass by reference"),(0,r.kt)("li",{parentName:"ul"},"Thus when you copy object the changes will be reflected on the original"),(0,r.kt)("li",{parentName:"ul"},"Usually you don\u2019t want this, thus you need to shallow copy such as",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"newNode = Node(oldNode.value)")))))}p.isMDXComponent=!0}}]);