"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1906],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=u(n),d=o,h=m["".concat(s,".").concat(d)]||m[d]||p[d]||r;return n?a.createElement(h,i(i({ref:t},c),{},{components:n})):a.createElement(h,i({ref:t},c))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:o,i[1]=l;for(var u=2;u<r;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1911:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>u});var a=n(7462),o=(n(7294),n(3905));const r={"date created":"Thursday, June 16th 2022, 1:47:45 pm","date modified":"Sunday, July 3rd 2022, 11:30:11 am",title:"How to Approach OOP Questions"},i="How to Approach OOP Questions",l={unversionedId:"Algo/Fundamental Algorithms/Recommendations/How to approach OOP questions",id:"Algo/Fundamental Algorithms/Recommendations/How to approach OOP questions",title:"How to Approach OOP Questions",description:"Handle Ambiguity",source:"@site/docs/Algo/Fundamental Algorithms/Recommendations/How to approach OOP questions.md",sourceDirName:"Algo/Fundamental Algorithms/Recommendations",slug:"/Algo/Fundamental Algorithms/Recommendations/How to approach OOP questions",permalink:"/obsidian/docs/Algo/Fundamental Algorithms/Recommendations/How to approach OOP questions",draft:!1,editUrl:"https://github.com/zekaryas1/notes/blob/main/docs/Algo/Fundamental Algorithms/Recommendations/How to approach OOP questions.md",tags:[],version:"current",frontMatter:{"date created":"Thursday, June 16th 2022, 1:47:45 pm","date modified":"Sunday, July 3rd 2022, 11:30:11 am",title:"How to Approach OOP Questions"},sidebar:"tutorialSidebar",previous:{title:"How to Act During Interviews",permalink:"/obsidian/docs/Algo/Fundamental Algorithms/Recommendations/How to act during interviews"},next:{title:"Which Algo to Select, Pattern Based Answer",permalink:"/obsidian/docs/Algo/Fundamental Algorithms/Recommendations/Which algo to select, pattern based answer"}},s={},u=[{value:"Handle Ambiguity",id:"handle-ambiguity",level:2},{value:"Define the Core Objects",id:"define-the-core-objects",level:2},{value:"Analyze Relationships",id:"analyze-relationships",level:2},{value:"Investigate Actions",id:"investigate-actions",level:2}],c={toc:u},m="wrapper";function p(e){let{components:t,...n}=e;return(0,o.kt)(m,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"how-to-approach-oop-questions"},"How to Approach OOP Questions"),(0,o.kt)("h2",{id:"handle-ambiguity"},"Handle Ambiguity"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"When being asked an object-oriented design question,",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"you should inquire ",(0,o.kt)("em",{parentName:"li"},"who ")," is going to use it and ",(0,o.kt)("em",{parentName:"li"},"how ")," they are going to use it."))),(0,o.kt)("li",{parentName:"ul"},'Depending on the question, you may even want to go through the "six _Ws":',(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"_ who, what, where, when, how, why.")))),(0,o.kt)("h2",{id:"define-the-core-objects"},"Define the Core Objects"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Now that we understand what we're designing, we should consider what the \u201ccore objects\u201d in a system are.")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"For example,",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"suppose we are asked to do the object-oriented design for a restaurant. Our core objects might be things like Table, Guest, Party, Order, Meal, Employee, Server, and Host.")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"class Guest{\n\n}\n\nclass Party{\n\n}\n\nclass Meal{\n\n}\n...\n")),(0,o.kt)("h2",{id:"analyze-relationships"},"Analyze Relationships"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Having more or less decided on our core objects, we now want to analyze the relationships between the objects."),(0,o.kt)("li",{parentName:"ul"},"Which objects are members of which other objects? Do any objects inherit from any others? Are relationships many-to-many or one-to-many?")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"For example, in the restaurant question, we may come up with the following design:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"the Party should have an array of Guests."),(0,o.kt)("li",{parentName:"ul"},"Server and Host inherit from Employee."),(0,o.kt)("li",{parentName:"ul"},"Each table has one party, but each Party may have multiple Tables ."),(0,o.kt)("li",{parentName:"ul"},"There is one Host for the Restaurant.")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"class Party{\n    Guests[] guests;\n}\n\nclass Server extends Employee{\n\n}\n...\n")),(0,o.kt)("h2",{id:"investigate-actions"},"Investigate Actions"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"At this point, you should have the basic outline of your object-oriented design. What remains is to consider the key actions that the objects will take and how they relate to each other."),(0,o.kt)("li",{parentName:"ul"},"You may find that you have forgotten some objects, and you will need to update your design."),(0,o.kt)("li",{parentName:"ul"},"Example:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Action of Guests include",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"makeOrder()"),(0,o.kt)("li",{parentName:"ul"},"pay()"),(0,o.kt)("li",{parentName:"ul"},"changeTable()"),(0,o.kt)("li",{parentName:"ul"},"callServer()")))))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"class Guest{\n\n    public void makeOrder(){\n    }\n    \n    public void pay(){\n    \n    }\n    ...\n}\n...\n")))}p.isMDXComponent=!0}}]);