"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9931],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(n),m=i,g=p["".concat(l,".").concat(m)]||p[m]||d[m]||a;return n?r.createElement(g,o(o({ref:t},c),{},{components:n})):r.createElement(g,o({ref:t},c))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:i,o[1]=s;for(var u=2;u<a;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5362:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var r=n(7462),i=(n(7294),n(3905));const a={tags:["sub_sequence","string","two_pointers"],"date created":"Wednesday, August 24th 2022, 11:09:27 am","date modified":"Wednesday, August 24th 2022, 11:40:16 am",title:"392 Is Sub-sequence"},o="392 Is Sub-sequence",s={unversionedId:"Algo/Coding Practice/String/392 Is Subsequence",id:"Algo/Coding Practice/String/392 Is Subsequence",title:"392 Is Sub-sequence",description:"Solution 1: Two Pointers",source:"@site/docs/Algo/Coding Practice/String/392 Is Subsequence.md",sourceDirName:"Algo/Coding Practice/String",slug:"/Algo/Coding Practice/String/392 Is Subsequence",permalink:"/Obsidian-Docusaurus/docs/Algo/Coding Practice/String/392 Is Subsequence",draft:!1,editUrl:"https://github.com/321paranoiawhy/321paranoiawhy.github.io/blob/main/docs/Algo/Coding Practice/String/392 Is Subsequence.md",tags:[{label:"sub_sequence",permalink:"/Obsidian-Docusaurus/docs/tags/sub-sequence"},{label:"string",permalink:"/Obsidian-Docusaurus/docs/tags/string"},{label:"two_pointers",permalink:"/Obsidian-Docusaurus/docs/tags/two-pointers"}],version:"current",frontMatter:{tags:["sub_sequence","string","two_pointers"],"date created":"Wednesday, August 24th 2022, 11:09:27 am","date modified":"Wednesday, August 24th 2022, 11:40:16 am",title:"392 Is Sub-sequence"},sidebar:"tutorialSidebar",previous:{title:"3 Longest Sub-string Without Repeating Characters",permalink:"/Obsidian-Docusaurus/docs/Algo/Coding Practice/String/3 Longest Substring Without Repeating Characters"},next:{title:"424 Longest Repeating Character Replacement",permalink:"/Obsidian-Docusaurus/docs/Algo/Coding Practice/String/424 Longest Repeating Character Replacement.py"}},l={},u=[{value:"Solution 1: Two Pointers",id:"solution-1-two-pointers",level:2},{value:"Solution 2: Python Iter",id:"solution-2-python-iter",level:2}],c={toc:u},p="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(p,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"392-is-sub-sequence"},"392 Is Sub-sequence"),(0,i.kt)("h2",{id:"solution-1-two-pointers"},"Solution 1: Two Pointers"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Two pointers",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"we want to check every ",(0,i.kt)("inlineCode",{parentName:"li"},"elt")," in s is also in t, but also preserving initial order"),(0,i.kt)("li",{parentName:"ul"},"initialize two pointers on word s and t"),(0,i.kt)("li",{parentName:"ul"},"if the two pointers match increment both",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"if pointer at t doesn't match with pointer at s",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"increment pointer at t only"))))),(0,i.kt)("li",{parentName:"ul"},"stop when one of them is out of bound",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"if every ",(0,i.kt)("inlineCode",{parentName:"li"},"elt")," in s is a sub-sequence, pointer at s will be out of bound"))),(0,i.kt)("li",{parentName:"ul"},"complexity:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Time: O(n)"),(0,i.kt)("li",{parentName:"ul"},"Space: O(1)")))))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def isSubsequence(self, s: str, t: str) -> bool:        \n        i = 0\n        j = 0\n        \n        while i<len(s) and j<len(t):\n            if s[i] == t[j]:\n                i += 1\n            j += 1\n            \n        return i == len(s)\n")),(0,i.kt)("h2",{id:"solution-2-python-iter"},"Solution 2: Python Iter"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/Obsidian-Docusaurus/docs/Algo/Python%20Tips%20&%20Tricks/built-in%20list%20functions#iter"},"Read about iter")),(0,i.kt)("li",{parentName:"ul"},"Just testing whether all characters in s are also in t (in order).")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"def isSubsequence(self, s, t):\n    t = iter(t)\n    for elt in s:\n        if elt not in t:\n            return False\n    return True\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"def isSubsequence(self, s, t):\n    t = iter(t)\n    return all([elt in t for elt in s])\n")))}d.isMDXComponent=!0}}]);