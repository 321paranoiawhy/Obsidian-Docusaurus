"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3153],{3905:(e,n,r)=>{r.d(n,{Zo:()=>s,kt:()=>h});var t=r(7294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function o(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var d=t.createContext({}),u=function(e){var n=t.useContext(d),r=n;return e&&(r="function"==typeof e?e(n):o(o({},n),e)),r},s=function(e){var n=u(e.components);return t.createElement(d.Provider,{value:n},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},y=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,i=e.originalType,d=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=u(r),y=a,h=m["".concat(d,".").concat(y)]||m[y]||c[y]||i;return r?t.createElement(h,o(o({ref:n},s),{},{components:r})):t.createElement(h,o({ref:n},s))}));function h(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=y;var l={};for(var d in n)hasOwnProperty.call(n,d)&&(l[d]=n[d]);l.originalType=e,l[m]="string"==typeof e?e:a,o[1]=l;for(var u=2;u<i;u++)o[u]=r[u];return t.createElement.apply(null,o)}return t.createElement.apply(null,r)}y.displayName="MDXCreateElement"},6510:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var t=r(7462),a=(r(7294),r(3905));const i={"date created":"Thursday, June 16th 2022, 1:47:45 pm","date modified":"Sunday, July 24th 2022, 8:41:37 pm",title:"Boundary Binary Search"},o="Boundary Binary Search",l={unversionedId:"Algo/Fundamental Algorithms/Searching algos/Binary search-Find boundary",id:"Algo/Fundamental Algorithms/Searching algos/Binary search-Find boundary",title:"Boundary Binary Search",description:"- Source Algo Monster",source:"@site/docs/Algo/Fundamental Algorithms/Searching algos/2. Binary search-Find boundary.md",sourceDirName:"Algo/Fundamental Algorithms/Searching algos",slug:"/Algo/Fundamental Algorithms/Searching algos/Binary search-Find boundary",permalink:"/obsidian/docs/Algo/Fundamental Algorithms/Searching algos/Binary search-Find boundary",draft:!1,editUrl:"https://github.com/zekaryas1/notes/blob/main/docs/Algo/Fundamental Algorithms/Searching algos/2. Binary search-Find boundary.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{"date created":"Thursday, June 16th 2022, 1:47:45 pm","date modified":"Sunday, July 24th 2022, 8:41:37 pm",title:"Boundary Binary Search"},sidebar:"tutorialSidebar",previous:{title:"Binary Search",permalink:"/obsidian/docs/Algo/Fundamental Algorithms/Searching algos/Binary search"},next:{title:"Selection Sort",permalink:"/obsidian/docs/Algo/Fundamental Algorithms/Sorting algos/Selection Sort"}},d={},u=[{value:"How to Use Binary Boundary Method",id:"how-to-use-binary-boundary-method",level:2},{value:"Finding the Boundary with Binary Search",id:"finding-the-boundary-with-binary-search",level:2},{value:"Find Minimum in Rotated Sorted Array",id:"find-minimum-in-rotated-sorted-array",level:2}],s={toc:u},m="wrapper";function c(e){let{components:n,...r}=e;return(0,a.kt)(m,(0,t.Z)({},s,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"boundary-binary-search"},"Boundary Binary Search"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://algo.monster/problems/binary_search_boundary"},"Source Algo Monster"))),(0,a.kt)("h2",{id:"how-to-use-binary-boundary-method"},"How to Use Binary Boundary Method"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Most binary search questions can be solved with find boundary logic",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Steps:",(0,a.kt)("ol",{parentName:"li"},(0,a.kt)("li",{parentName:"ol"},"Find a logic to turn the sorted inputs in to a false\u2026True array"),(0,a.kt)("li",{parentName:"ol"},"With that logic modify the previous code"))),(0,a.kt)("li",{parentName:"ul"},"Example: Solving minimum in rotated sorted array",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"The logic to turn the sorted array: is arr","[i]"," <= arr","[-1]")))))),(0,a.kt)("h2",{id:"finding-the-boundary-with-binary-search"},"Finding the Boundary with Binary Search"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"An array of boolean values is divided into two sections;",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"The left section consists of all false and"),(0,a.kt)("li",{parentName:"ul"},"The right section consists of all true.")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Find the boundary of the right section",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"I.e. the index of the first true element. If there is no true element, return -1*."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://algo.monster/problems/binary_search_boundary"},"Finding Boundary - Binary Search / Overview"),"_")))))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"from typing import List\n\ndef find_boundary(arr: List[bool]) -> int:\n    left, right = 0, len(arr) - 1\n    boundary_index = -1\n\n    while left <= right:\n        mid = (left + right) // 2\n        if arr[mid]:\n            boundary_index = mid\n            right = mid - 1\n        else:\n            left = mid + 1\n\n    return boundary_index\n\nif __name__ == '__main__':\n    arr = [False, False, True, True, True]\n    res = find_boundary(arr)\n    print(res)\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"find-minimum-in-rotated-sorted-array"},"Find Minimum in Rotated Sorted Array"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"from typing import List\n\ndef find_min_rotated(arr: List[int]) -> int:\n    left, right = 0, len(arr) - 1\n    boundary_index = -1\n\n    while left <= right:\n        mid = (left + right) // 2\n        # if <= last element, then belongs to lower half\n        if arr[mid] <= arr[-1]:\n            boundary_index = mid\n            right = mid - 1\n        else:\n            left = mid + 1\n\n    return boundary_index\n\nif __name__ == '__main__':\n    arr = [int(x) for x in input().split()]\n    res = find_min_rotated(arr)\n    print(res)\n")))}c.isMDXComponent=!0}}]);