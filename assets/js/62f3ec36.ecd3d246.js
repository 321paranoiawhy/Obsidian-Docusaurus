"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[986],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>g});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(r),m=a,g=u["".concat(s,".").concat(m)]||u[m]||d[m]||o;return r?n.createElement(g,i(i({ref:t},c),{},{components:r})):n.createElement(g,i({ref:t},c))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8668:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const o={tags:["heap"],"date created":"Thursday, August 4th 2022, 4:28:04 pm","date modified":"Friday, November 18th 2022, 1:36:17 pm",title:"Merge K Sorted Lists"},i="Merge K Sorted Lists",l={unversionedId:"Algo/Coding Practice/Heap/Merge K Sorted Lists",id:"Algo/Coding Practice/Heap/Merge K Sorted Lists",title:"Merge K Sorted Lists",description:"Intro to K-way Merge",source:"@site/docs/Algo/Coding Practice/Heap/Merge K Sorted Lists.md",sourceDirName:"Algo/Coding Practice/Heap",slug:"/Algo/Coding Practice/Heap/Merge K Sorted Lists",permalink:"/Obsidian-Docusaurus/docs/Algo/Coding Practice/Heap/Merge K Sorted Lists",draft:!1,editUrl:"https://github.com/321paranoiawhy/321paranoiawhy.github.io/blob/main/docs/Algo/Coding Practice/Heap/Merge K Sorted Lists.md",tags:[{label:"heap",permalink:"/Obsidian-Docusaurus/docs/tags/heap"}],version:"current",frontMatter:{tags:["heap"],"date created":"Thursday, August 4th 2022, 4:28:04 pm","date modified":"Friday, November 18th 2022, 1:36:17 pm",title:"Merge K Sorted Lists"},sidebar:"tutorialSidebar",previous:{title:"23 Merge K Sorted List",permalink:"/Obsidian-Docusaurus/docs/Algo/Coding Practice/Heap/23 Merge k sorted list"},next:{title:"57 Insert Interval",permalink:"/Obsidian-Docusaurus/docs/Algo/Coding Practice/Intervals/57 Insert Interval"}},s={},p=[{value:"Intro to K-way Merge",id:"intro-to-k-way-merge",level:2}],c={toc:p},u="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"merge-k-sorted-lists"},"Merge K Sorted Lists"),(0,a.kt)("h2",{id:"intro-to-k-way-merge"},"Intro to K-way Merge"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://hackernoon.com/14-patterns-to-ace-any-coding-interview-question-c5bb3357f6ed"},"Source")),(0,a.kt)("li",{parentName:"ul"},"K-way Merge helps you solve problems that involve a set of sorted arrays."),(0,a.kt)("li",{parentName:"ul"},"Whenever you\u2019re given \u2018K\u2019 sorted arrays, you can use a Heap to efficiently perform a sorted traversal of all the elements of all arrays."),(0,a.kt)("li",{parentName:"ul"},"You can push the smallest element of each array in a Min Heap to get the overall minimum. After getting the overall minimum, push the next element from the same array to the heap. Then, repeat this process to make a sorted traversal of all elements."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("img",{parentName:"li",src:"https://hackernoon.com/_next/image?url=https%3A%2F%2Fcdn.hackernoon.com%2Fimages%2FG9YRlqC9joZNTWsi1ul7tRkO6tv1-4hwy3w8x.jpg&w=828&q=75",alt:null})),(0,a.kt)("li",{parentName:"ul"},"The steps involved to solve this kind of problem will be",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Insert the first element of each array in a Min Heap."),(0,a.kt)("li",{parentName:"ul"},"After this, take out the smallest (top) element from the heap and add it to the merged list."),(0,a.kt)("li",{parentName:"ul"},"After removing the smallest element from the heap, insert the next element of the same list into the heap."),(0,a.kt)("li",{parentName:"ul"},"Repeat steps 2 and 3 to populate the merged list in sorted order.")))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"l1 = [2,6,8]\nl2 = [3,6,7]\nl3 = [1,3,4]\n\nq = PriorityQueue()\nq.put([l1[0],0, a])\nq.put([l2[0],0, b])\nq.put([l3[0],0, c])\n\nres = []\nwhile not q.empty():\n    elt, index, arr = q.get()\n    res.append(elt)\n\n    if index != len(arr)-1:\n        index += 1\n        q.put([a[index], index, arr])\nreturn res\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Pythonic way of merging sorted list",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/Obsidian-Docusaurus/docs/Algo/Python%20Tips%20&%20Tricks/More%20on%20heapq#Merge%20Sorted%20Array%20with%20Heapq"},"Merge Sorted Array with Heapq"))))))}d.isMDXComponent=!0}}]);