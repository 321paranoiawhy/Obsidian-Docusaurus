"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9500],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>d});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),m=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=m(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=m(a),h=r,d=p["".concat(s,".").concat(h)]||p[h]||c[h]||i;return a?n.createElement(d,o(o({ref:t},u),{},{components:a})):n.createElement(d,o({ref:t},u))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:r,o[1]=l;for(var m=2;m<i;m++)o[m]=a[m];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},3927:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>m});var n=a(7462),r=(a(7294),a(3905));const i={"date created":"Thursday, June 16th 2022, 1:47:45 pm","date modified":"Friday, January 13th 2023, 11:16:56 am",title:"What is Algorithm Analysis"},o="What is Algorithm Analysis",l={unversionedId:"Algo/Fundamental Algorithms/Algorithm analysis",id:"Algo/Fundamental Algorithms/Algorithm analysis",title:"What is Algorithm Analysis",description:"* Time is not the only thing that matters in an algorithm. We might also care about the amount of memory or space required by an algorithm.",source:"@site/docs/Algo/Fundamental Algorithms/Algorithm analysis.md",sourceDirName:"Algo/Fundamental Algorithms",slug:"/Algo/Fundamental Algorithms/Algorithm analysis",permalink:"/obsidian/docs/Algo/Fundamental Algorithms/Algorithm analysis",draft:!1,editUrl:"https://github.com/zekaryas1/notes/blob/main/docs/Algo/Fundamental Algorithms/Algorithm analysis.md",tags:[],version:"current",frontMatter:{"date created":"Thursday, June 16th 2022, 1:47:45 pm","date modified":"Friday, January 13th 2023, 11:16:56 am",title:"What is Algorithm Analysis"},sidebar:"tutorialSidebar",previous:{title:"Check is a Tree is",permalink:"/obsidian/docs/Algo/Coding Practice/Tree/Check is a tree is"},next:{title:"Bit Manipulation",permalink:"/obsidian/docs/Algo/Fundamental Algorithms/Bit manipulation"}},s={},m=[{value:"Common Algorithm&#39;s Time Complexity",id:"common-algorithms-time-complexity",level:2},{value:"What Does \u201cconstant Extra space\u201d means?_",id:"what-does-constant-extra-space-means_",level:2},{value:"Amortized Cost",id:"amortized-cost",level:2}],u={toc:m},p="wrapper";function c(e){let{components:t,...a}=e;return(0,r.kt)(p,(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"what-is-algorithm-analysis"},"What is Algorithm Analysis"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Time is not the only thing that matters in an algorithm. We might also care about the amount of memory or space required by an algorithm."),(0,r.kt)("li",{parentName:"ul"},"In algorithm analysis, we focus on the growth rate of the running time as a function of the input size n.(how many times a function is likely to execute based on the input)"),(0,r.kt)("li",{parentName:"ul"},"Big 0(asymptotic runtime) is the language and metric we use to describe the efficiency of algorithms."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://youtu.be/BgLTDT03QtU"},"Video explanation on big o"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://neetcode.io/courses/lessons/big-o-notation"},"Related website with code example"))))),(0,r.kt)("h2",{id:"common-algorithms-time-complexity"},"Common Algorithm's Time Complexity"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Most Sorting Algo = O(nlogn)"),(0,r.kt)("li",{parentName:"ul"},"Heap operation is O(logn)",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Pushing and popping k times will be klogn"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://algo.monster/problems/runtime_summary"},"Common runtime complexity from Algo.monster"))),(0,r.kt)("h2",{id:"what-does-constant-extra-space-means_"},"What Does \u201cconstant Extra space\u201d means?_"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"It means use a constant O(1) memory this can be",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Variable"),(0,r.kt)("li",{parentName:"ul"},"Array with fixed size i.e ",(0,r.kt)("inlineCode",{parentName:"li"},"Array a = new Array[3]")))),(0,r.kt)("li",{parentName:"ul"},"It doesn\u2019t mean",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"A dictionary or an array that depends on the input"),(0,r.kt)("li",{parentName:"ul"},"Ex: List l = new List(input.length)")))),(0,r.kt)("h2",{id:"amortized-cost"},"Amortized Cost"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The append() operation of the list structure introduces a special case in algorithm analysis.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"The time required depends on the available capacity of the underlying array used to implement the list. If there are available slots, a value can be appended to the list in constant time."),(0,r.kt)("li",{parentName:"ul"},"If the array has to be expanded to make room for the new value, however, the append operation takes linear time.")))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Amortized analysis is the process of computing the time-complexity for a sequence of operations by computing the average cost over the entire sequence.")))}c.isMDXComponent=!0}}]);