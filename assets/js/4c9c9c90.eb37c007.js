"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8862],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=r.createContext({}),l=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(u.Provider,{value:t},e.children)},g="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,u=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),g=l(n),p=i,m=g["".concat(u,".").concat(p)]||g[p]||d[p]||a;return n?r.createElement(m,o(o({ref:t},c),{},{components:n})):r.createElement(m,o({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=p;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s[g]="string"==typeof e?e:i,o[1]=s;for(var l=2;l<a;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},9746:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=n(7462),i=(n(7294),n(3905));const a={tags:["string","sliding_window","set"],"date created":"Wednesday, August 10th 2022, 10:45:23 am","date modified":"Wednesday, August 10th 2022, 11:21:55 am",title:"3 Longest Sub-string Without Repeating Characters"},o="3 Longest Sub-string Without Repeating Characters",s={unversionedId:"Algo/Coding Practice/String/3 Longest Substring Without Repeating Characters",id:"Algo/Coding Practice/String/3 Longest Substring Without Repeating Characters",title:"3 Longest Sub-string Without Repeating Characters",description:"Solution",source:"@site/docs/Algo/Coding Practice/String/3 Longest Substring Without Repeating Characters.md",sourceDirName:"Algo/Coding Practice/String",slug:"/Algo/Coding Practice/String/3 Longest Substring Without Repeating Characters",permalink:"/Obsidian-Docusaurus/docs/Algo/Coding Practice/String/3 Longest Substring Without Repeating Characters",draft:!1,editUrl:"https://github.com/321paranoiawhy/321paranoiawhy.github.io/blob/main/docs/Algo/Coding Practice/String/3 Longest Substring Without Repeating Characters.md",tags:[{label:"string",permalink:"/Obsidian-Docusaurus/docs/tags/string"},{label:"sliding_window",permalink:"/Obsidian-Docusaurus/docs/tags/sliding-window"},{label:"set",permalink:"/Obsidian-Docusaurus/docs/tags/set"}],version:"current",frontMatter:{tags:["string","sliding_window","set"],"date created":"Wednesday, August 10th 2022, 10:45:23 am","date modified":"Wednesday, August 10th 2022, 11:21:55 am",title:"3 Longest Sub-string Without Repeating Characters"},sidebar:"tutorialSidebar",previous:{title:"128 Longest Consecutive Sequence",permalink:"/Obsidian-Docusaurus/docs/Algo/Coding Practice/String/128 Longest Consecutive Sequence"},next:{title:"392 Is Sub-sequence",permalink:"/Obsidian-Docusaurus/docs/Algo/Coding Practice/String/392 Is Subsequence"}},u={},l=[{value:"Solution",id:"solution",level:2}],c={toc:l},g="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(g,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"3-longest-sub-string-without-repeating-characters"},"3 Longest Sub-string Without Repeating Characters"),(0,i.kt)("h2",{id:"solution"},"Solution"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"We will have a sliding window",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"We keep expanding the window as long as the next element is unique",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"We can use set to check uniqueness"))),(0,i.kt)("li",{parentName:"ul"},"If we find a duplicate element we will shrink the window from the start",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Until the current element is unique"))),(0,i.kt)("li",{parentName:"ul"},"The length of the window will be ","[end-start+1]")))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"     0 1 2 3 4 5 6 7\na = [x,a,b,c,a,b,c,d]\n\n1. start,end will be at index 0 or elt x\n2. we keep expanding the end up untill next a[4], end = 4\n    1. a is not unique\n3. we shrink the window from start\n    1. remove x, start = 1, a is still inside the window\n    2. remove a, start = 2, a is unique\n    3. size = [4-2+1] = 3\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def solve(self, nums):\n        memo = set()\n        start = res = 0\n        \n        for end in range(len(nums)):\n            while nums[end] in memo:\n                memo.remove(nums[start])\n                start += 1\n            memo.add(nums[end])\n            res = max(res, end-start+1)\n            \n        return res\n")))}d.isMDXComponent=!0}}]);